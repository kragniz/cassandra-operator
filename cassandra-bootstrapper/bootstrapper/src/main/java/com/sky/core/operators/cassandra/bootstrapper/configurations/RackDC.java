package com.sky.core.operators.cassandra.bootstrapper.configurations;

import com.sky.core.operators.cassandra.bootstrapper.CassandraBootstrapper;
import com.sky.core.operators.cassandra.bootstrapper.ConfigurerException;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Properties;

import static java.lang.String.format;

public class RackDC extends ConfigurationAction {
    @Override
    public void apply(final Context context) {
        final File rackDcProperties = new File(context.getStagingDir(), "cassandra-rackdc.properties");

        final Properties props = new Properties();
        props.put("dc", context.getEnvironmentReader().readMandatory("CLUSTER_DATA_CENTER"));
        props.put("rack", context.getEnvironmentReader().readMandatory("CLUSTER_CURRENT_RACK"));

        try (final FileWriter fw = new FileWriter(rackDcProperties)) {
            props.store(fw, format("Generated by %s", CassandraBootstrapper.class.getName()));
        } catch (IOException ex) {
            throw new ConfigurerException("Unable to write cassandra-rackdc.properties", ex);
        }
    }
}
